# Desktop Info by Glenn Delahoy
# Sample advanced configuration file
# See the manual for a full description of all options

[options]

# size and position
top=0
right=0
width=450
font-size=10
font-face=Arial
formcolor=501020

# logging
log=desktopinfo.log
log-level=debugonerror

# misc
ignore-setting-change=1

[options-w]
centerv=1
centerh=1
font-size=10
font-face=Arial
formcolor=501020

[screen-saver]
font-size=16
centerv=1
centerh=1
formcolor=501020

[text]
noresults=<n/a>
error=[error]
null-result=<null>
unknown=Unknown
executing=<executing>
menu-export=Export
menu-reload=Reload
menu-configuration=Edit Configuration
menu-log=Open Log File
menu-manual=Read Manual
menu-wmode=Start W Mode
menu-about=About Desktop Info
menu-quit=Quit
nav-previous=Previous
nav-home=Home
nav-next=Next

[items]

# colors
set White   = #ffffff
set Grey    = #909090
set Cyan    = #00ffff
set Magenta = #ff00ff
set Green   = #00ff00
set Orange  = #ffd000
set Yellow  = #ffff00
set Silver  = #d0d0d0
set Blue    = #0000f0
set Red     = #ff0000

# battery status lookup table
set battery1      = Disconnected
set battery2      = Connected
set battery3      = Fully Charged
set battery<null> = Not In Use

# global items
NAV=global:-1
# try these alternative nav buttons
#NAV=global:-1,font-face:wingdings,caption-prev:ç,caption-home:n,caption-next:è,font-size:14
#NAV=global:-1,font-face:webdings,caption-prev:7,caption-home:<,caption-next:8
COMMENT=global:0,align:2,color:%white%,style:u,font-face:Comic Sans MS,font-size:130%,id:title,text:Desktop Info by Glenn Delahoy

# date/time
PAGE=1
PAGE-TITLE=Home Page
COLOR=%Cyan%

DATETIME=interval:10,display:%9 %10,id:local_time
DATETIME=interval:10,row-text:New York,display:%9 %10,offset:-240
WMI=interval:60,hide-no-result:1,id:battery,text:Battery,alarms:(%15 le 40 %red%),namespace:root\cimv2,query:Win32_Battery,display:%EstimatedChargeRemaining%% (%battery%BatteryStatus%%)

# cpu
CORETEMP=interval:10,hide-no-result:1,display:%1%2 (%5)
WMI=interval:10,id:temp,hide-no-result:1,maxrows:1,text:Cpu Temp,namespace:root\wmi,query:MSAcpi_ThermalZoneTemperature,display:{{%CurrentTemperature%/10-273.15}}[1.0f]C / {{%CriticalTripPoint%/10-273.15}}[1.0f]C
CPU=interval:2,background-interval:10,chart:filled series1:1 color1:00ff00 series2:2 color2:bb00bb series3:%3 color3:%red%, \
  alarms:(%1 ge 80 %red%)(%2 ge 40 %red%)(%3 ge 20 %orange%),\
  display:Tot: %1[2.0f]%\, Krnl: %2[2.0f]%\, Queue: %3|Processes: %4\, Threads: %5
TOPPROCESSCPU=interval:3,font-size:80%,text:Top Cpu,display:%1 (pid:%2) %3[1.1f]%

# memory
COMMENT=text:,font-size:50%
COLOR=b0ffb0
PHYSICALRAM=interval:30,font-size:120%,alarms:(%3 ge 80 %red%),display:%1[3.1b]B / %2[3.1b]B (%3% used)
TOPPROCESSMEM=interval:10,font-size:80%,text:Top Memory,display:%1 (pid:%2) %3[1.1b]B
PAGEFAULTS=interval:10,font-size:100%,alarms:(%5 le 80 2222c0),hide-no-result:1,display:Tot: %1\, Hrd: %2\, Hit: %5%

# network
COMMENT=text:,font-size:50%
COLOR=%Cyan%
# check the 'where' clause matches your hardware
WMI=interval:4,id:network, hide-no-result:1,font-size:80%,\
  chart:line scale:log series1:%1 color1:00ff00 series2:{{Neg(%2)}} height:2 color2:bb00bb,\
  alarms:(%1 ge {{%CurrentBandwidth%/8*95/100}} 2222ee)(%2 ge {{%CurrentBandwidth%/8*95/100}} 0000ff),\
  row-text:%Name%[25.0s] Traffic,\
  namespace:root\cimv2,query:Win32_PerfFormattedData_Tcpip_NetworkInterface where (Name like "%Network%" OR Name like "%Ethernet%" OR Name like "%Wireless%" OR Name like "%PRO_1000%") and CurrentBandwidth>0,display:R: %BytesReceivedPersec%[3.1b]Bps\, S: %BytesSentPersec%[3.1b]Bps\, B: {{%CurrentBandwidth%/8}}[1.0B]Bps

# disks
COMMENT=text:,font-size:50%
COLOR=%Silver%
LOGICALDRIVES=interval:5,diskio:1,font-size:85%,chart:bar max:100 series1:7 threshold:75,alarms:(%11 ge 10000000 0000f0)(%13 ge 10000000 0000f0)(%7 ge 90 0070f0),row-text:Drive %1: (%2)| %3,display:%6[1.0B]B/%5[1.0B]B (%7[1.1f]% used)|%chart%| r: %11[1.1B]B/s\, w: %13[1.1B]B/s\, q: %17\, i: %19%| avg read: {{%15*1000}}[1.2f]ms\, write: {{%16*1000}}[1.2f]ms

ALARMS=text:Last Alarm: %10, display:%14,maxrows:1,hide-no-result:1

# windows
PAGE=2
PAGE-TITLE=Windows
COLOR=%Cyan%

COMMENT=color:%White%,style:iwb,text:Dates / Times,align:2
DATETIME=interval:10,display:%9 %10
TIMEZONE=interval:3600,display:%1 (%2)
WMI=interval:3600,text:Daylight Savings,namespace:root\cimv2,query:CIM_ComputerSystem,display:Enabled: %EnableDaylightSavingsTime%[b:Yes:No]\, In Effect: %DaylightInEffect%[b:Yes:No]
BOOTTIME=display:%9 %10
UPTIME=interval:60,display:%1 days %2 hrs %3 mins
COMMENT=text:,font-size:50%

COLOR=%White%

# windows configuration
COMMENT=color:%White%,style:iwb,text:Windows Configuration,align:2
OSBUILD2=background-interval:3600,display:%1{{{ (%2)}}}|Build: %3{{{ (%18)}}}|Installed: %install_date_short% %install_time_short%\
 |Win Dir: %windowsdirectory%|Sys Dir: %systemdirectory%
SERVICEPACK=hide-no-result:1

USER=set:username,hidden:1,background-interval:3600
HOST=text:Host/User,display:%1/%username%,background-interval:3600
REG=interval:600,text:Firewall,value:HKLM\SYSTEM\CurrentControlSet\services\SharedAccess\Parameters\FirewallPolicy\DomainProfile\EnableFirewall,display:%1[b:Active:Not Active]
REG=interval:600,hide-no-result:1,text:Auto Update,value:HKLM\Software\Microsoft\Windows\CurrentVersion\WindowsUpdate\Auto Update\Results\Install\LastSuccessTime,display:%1
REG=interval:600,text:UAC Enabled,value:HKLM\Software\Microsoft\Windows\CurrentVersion\Policies\System\EnableLUA,display:%1[b:Enabled:Disabled]
#Secureboot/UEFI status
REG=interval:600,hide-no-result:1,text:Secure Boot Status,value:HKLM\SYSTEM\CurrentControlSet\Control\SecureBoot\State\UEFISecureBootEnabled,display:%1[b:Enabled:Disabled]
IEVERSION
DIRECTX
SET-SECTION=key:rdp-users,value:rdp-users.ps1
CMD=interval:60,text:RDP Users,trim:1,file:powershell.exe,parameters:%rdp-users%,code-page:437
VIRTUALDESKTOP=hide-no-result:1
SET-SECTION=key:pending-reboot,value:pending-reboot.ps1
CMD=interval:3600,text:Reboot Pending,trim:1,file:powershell.exe,parameters:%pending-reboot%,code-page:437
SET-SECTION=key:windows-updates,value:windows-updates.ps1
CMD=interval:3600,text:Pending Updates,trim:1,file:powershell.exe,parameters:%windows-updates%,code-page:437,no-wait:1
SET-SECTION=key:bitlocker-status,value:bitlocker-status.ps1
COMMENT=color:%White%,text:BitLocker Status,style:iwb,align:2
set bitlocker-query=Local Fixed
CMD=interval:3600,text:Bitlocker Status,trim:1,file:powershell.exe,parameters:%bitlocker-status%,code-page:437,wide:1,font-face:Consolas

CONTROL=type:0,color:%orange%,text:,display:Windows Updates,uri:explorer,args:ms-settings:windowsupdate,width:80,height:38
COMMENT=text:,font-size:50%

# network
PAGE=3
PAGE-TITLE=Network
COLOR=%cyan%

COMMENT=color:%White%,style:iwb,text:Network
HOST
USER
DOMAIN=hide-no-result:1
DOMAINCONTROLLER=hide-no-result:1
DNSSERVER
WMI=interval:600,hide-no-result:1,text:Workgroup,namespace:root\cimv2,query:Win32_ComputerSystem, display:%Workgroup%
NETCONNECTIONS=interval:5
NETPACKETS=interval:5,display:r:%1[1.0n]  s:%2[1.0n]
NETPACKETSRATE=interval:5,text:Net Rate,mtu:1500,display:r:%1[1.1b]Bps  s:%2[1.1b]Bps
WMI=interval:60,background-interval:60,id:latency,font-size:120%,alarms:(%11 ge 100 0088f0),text:Network Latency, namespace:root\cimv2,query:Win32_PingStatus where address='google.com',display:%ResponseTime%ms (google.com)
COLOR=%silver%
NETWORKINTERFACES=interval:30,font-size:85%,operstatus:1,iftype:6 23 71 243,ipv4list: %8/%10|,ipv6list:  %11|, row-text:%2|%4|link: t:%23[1.0B]Bps\, r:%24[1.0B]Bps,display:%8 / %10 (%14)| gw:%17| dns:%15| dhcp:%19|  %25 {{{|  ipv6:%26}}}
COLOR=%orange%
WMI=interval:3,hide-no-result:1,font-size:80%,chart:line height:2 scale:log series1:1 color1:00ff00 series2:{{Neg(%2)}} color2:bb00bb,alarms:(%1 ge {{%CurrentBandwidth%/8*95/100}} 2222ee)(%2 ge {{%CurrentBandwidth%/8*95/100}} 0000ff),row-text:%Name%[25.0s] Traffic,namespace:root\cimv2,query:Win32_PerfFormattedData_Tcpip_NetworkInterface where (Name like "%Network%" OR Name like "%Ethernet%" OR Name like "%Wireless%" OR Name like "%PRO_1000%") and CurrentBandwidth>0,display:R: %BytesReceivedPersec%[3.1b]Bps\, S: %BytesSentPersec%[3.1b]Bps\, B: {{%CurrentBandwidth%/8}}[1.0B]Bps
HTTPGET=interval:600,text:External ipv4,source:http://ipecho.net/plain
HTTPGET=interval:3600,text:External ipv6,source:http://[ipv6.plain-text-ip.com],font-size:85%
CONTROL=type:1,color:%orange%,text:,display:Network Connections,uri:%SystemRoot%\System32\control.exe,args:ncpa.cpl

# remote desktop state lookup table
set rds_state_0 = Active
set rds_state_1 = Connected
set rds_state_2 = ConnectQuery
set rds_state_3 = Shadow
set rds_state_4 = Disconnected
set rds_state_5 = Idle
set rds_state_6 = Listen
set rds_state_7 = Reset
set rds_state_8 = Down
set rds_state_9 = Init

COLOR=%silver%
COMMENT=color:%White%,style:iwb,text:Remote Desktop
RDS=interval:20,row-text:Console Session ID|Current Session|Address,display:%2|sid:%3 %7\%6|%8
COMMENT=color:%White%,style:iwb,text:Remote Desktop Sessions
RDSSESSIONS=interval:20,row-text:%1,display:sid:%2 state:%rds_state_%3%

# hardware
PAGE=4
PAGE-TITLE=Hardware
COLOR=%Cyan%

COMMENT=color:%White%,style:iwb,text:Hardware,align:2
WMI=interval:60,hide-no-result:1,text:Battery,namespace:root\cimv2,query:Win32_Battery,display:%EstimatedChargeRemaining%% (%battery%BatteryStatus%%)
OEMINFO=display:%2,hide-no-result:1
WMI=text:Motherboard,namespace:root\cimv2,query:Win32_Baseboard,display:%Manufacturer% %Product%
WMI=text:Bios,namespace:root\cimv2,query:Win32_Bios,display:%Caption%|Ser: %SerialNumber%
WMI=text:Trusted Platform Module,namespace:root\cimv2\Security\MicrosoftTpm,query:Win32_Tpm,\
 display:Activ:%IsActivated_InitialValue%[b:Yes:No]\, Enabl:%IsEnabled_InitialValue%[b:Yes:No]\, Owned:%IsOwned_InitialValue%[b:Yes:No]\
 |Version: %SpecVersion%\, Manuf Vers: %ManufacturerVersion%\
 |Info: %ManufacturerVersionInfo%\
 |Manuf Id: %ManufacturerId%\
 |Phys Version: %PhysicalPresenceVersionInfo%,no-wait:1

# display hardware
comment=text:Display Hardware,style:u,color:%white%,align:2
# get the windows major version
OSBUILD=set:winmajor=%2,hidden:1
# vista or later
IF=value1:%winmajor%,value2:6,comparator:ge
WMI=namespace:root\cimv2,query:Win32_VideoController,wide:1,align:2,\
  display:%caption% (%CurrentHorizontalResolution%x%CurrentVerticalResolution%x%CurrentBitsPerPixel%)
# earlier than vista
IF=value1:%winmajor%,value2:6,comparator:lt
WMI=namespace:root\cimv2,query:Win32_DisplayControllerConfiguration,wide:1,align:2,\
  display:    %caption%   (%HorizontalResolution%x%VerticalResolution%x%BitsPerPixel%)

comment=text:Monitors,style:u,color:%white%,align:2
WMI=namespace:root\cimv2,query:Win32_DisplayConfiguration,set:BitsPerPel=%BitsPerPel%,hidden:1
WMI=namespace:root\cimv2,query:Win32_DesktopMonitor,wide:1,align:2,\
  display:%caption% {{{(%ScreenWidth%x%ScreenHeight%x%BitsPerPel%)}}}
MONITOR=wide:1,display:Current Monitor: %4 x %5 %7ppi Primary:%6

WMI=text:Audio Controller,namespace:root\cimv2,query:Win32_SoundDevice,display:%Caption%
WMI=interval:30,text:Printers,namespace:root\cimv2,query:Win32_Printer,maxrows:1,display:%rowcount% printers
WMI=text:Default Printer, namespace:root\cimv2,query:Win32_Printer where default = "True",display:%Name% (%Status%)

CONTROL=wide:1,align:2,type:1,color:%orange%,text:,display:Devices and Printers,uri:control,args:printers
CONTROL2=left:140,type:1,color:%orange%,text:,display:Print Management,uri:printmanagement.msc
CONTROL2=left:265,type:1,color:%orange%,text:,display:Device Manager,uri:devmgmt.msc
COMMENT=text:,font-size:50%

COMMENT=color:%White%,style:u,text:Serial Ports,align:2
WMI=interval:10,font-size:80%,id:PnPPorts,text:PnP Ports,namespace:root\cimv2,query:Win32_PnPEntity where name like "%(COM%",display:%caption%,set:deviceid
WMI=interval:10,font-size:80%,id:SerialPorts,text:Serial Ports,namespace:root\wmi,query:MSSerial_PortName,display:%PortName%\, %InstanceName%
COMMENT=text:,font-size:50%

# cpu
COMMENT=color:%White%,style:iwb,text:CPU,align:2
CPUTYPE=font-size:80%
CPUCOUNT=font-size:80%,display:%1\, %2
WMI=interval:5,font-size:80%,text:CPU Info,namespace:root\cimv2,query:Win32_Processor,display:Speed:%MaxClockSpeed%MHz   Current:%CurrentClockSpeed%MHz
WMI=interval:5,hide-no-result:1,text:Cpu Temp,namespace:root\wmi,query:MSAcpi_ThermalZoneTemperature,display: {{%CurrentTemperature%/10-273.15}}[1.1f]C
CPU=interval:1,background-interval:10,chart:line series1:1 color1:00ff00 series2:2 color2:0000bb,alarms:(%1 ge 80 0000ff)(%2 ge 40 0000ff),display:Tot: %1[2.0f]%\, Krnl: %2[2.0f]%\, Queue: %3| Processes: %4\, Threads: %5
CPUUSAGE=interval:1,wide:1,font-size:8,row-text:Cpu %1,chart:bar max:100 series1:2 color1:c00000 threshold:80 \
  alarms:(%2 ge 80 %red%),display:Cpu %1 : %2[2.0d]% %chart%
COMMENT=color:%White%,style:u,text:Top Processes,align:2
TOPPROCESSCPU=interval:1,wide:1,align:2,font-face:Consolas,maxrows:5,display:%1[0.25s]%2[0.10s]%3[4.1f]%
COMMENT=text:,font-size:50%
CONTROL=wide:1,type:1,color:%orange%,text:,display:Performance Monitor,uri:perfmon

# system event logs
PAGE=5
PAGE-TITLE=System Event Logs
COLOR=%White%

COMMENT=style:iwb,text:System Event Logs
EVENTLOG=interval:60,font-size:80%,log:System,maxrows:5,row-text:%1| ID: %2| Type: %3\, Task: %4, display:Source: %5|Computer: %6|%7|%8|%9|%10
CONTROL=wide:1,type:1,color:%orange%,text:,display:Event Viewer,uri:eventvwr

PAGE=6
PAGE-TITLE=Application Event Logs

# application event logs
COMMENT=style:iwb,text:Application Event Logs
EVENTLOG=interval:6,font-size:80%,log:Application,maxrows:5, row-text:%1| ID: %2| Type: %3\, Task: %4, display:Source: %5|Computer: %6|%7|%8|%9|%10
CONTROL=wide:1,type:1,color:%orange%,text:,display:Event Viewer,uri:eventvwr

# physical disks
PAGE=7
PAGE-TITLE=Physical Disks

COMMENT=color:%White%,style:iwb,text:Physical Disks
PHYSICALDRIVES=interval:60,no-wait:1,font-size:90%,regex:^[ \t]+|[ \t]+$,row-text:%1|%12,display:%3|%4|id: %5|Media: %9|Model: %10|Serial: %13|Size: %14[1.0B]B\, Status: %15
COMMENT
CONTROL=type:1,color:%orange%,text:,display:Disk Management,uri:diskmgmt.msc

# memory
PAGE=8
PAGE-TITLE=Memory
COLOR=%Cyan%

# ram module type lookup table
set ram0  = Unknown
set ram1  = Other
set ram2  = DRAM
set ram3  = Sync DRAM
set ram4  = Cache DRAM
set ram5  = EDO
set ram6  = EDRAM
set ram7  = VRAM
set ram8  = SRAM
set ram9  = RAM
set ram10 = ROM
set ram11 = Flash
set ram12 = EEPROM
set ram13 = FEPROM
set ram14 = EPROM
set ram15 = CDRAM
set ram16 = 3DRAM
set ram17 = SDRAM
set ram18 = SGRAM
set ram19 = RDRAM
set ram20 = DDR
set ram21 = DDR2
set ram22 = DDR2 FB-DIMM
set ram23 = Unknown
set ram24 = DDR3
set ram25 = FBD2

COMMENT=color:%White%,style:iwb,text:Memory
WMI=namespace:root\cimv2,query:Win32_PhysicalMemory,row-text:%BankLabel%,display:%Capacity%[1.0b]B %DeviceLocator% %ram%MemoryType%%|%Manufacturer%
COMMENT
MEMORY=interval:5,display: Phys: %physusedbytes%[3.1b]B / %phystotalbytes%[3.1b]B (%physusedpct%% used)|\
 Virt: %virtusedbytes%[3.1b]B / %virttotalbytes%[3.1b]B (%virtusedpct%% used)|\
 Page: %pageusedbytes%[3.1b]B / %pagetotalbytes%[3.1b]B (%pageusedpct%% used)
 COMMENT=text:,font-size:50%
TOPPROCESSMEM=interval:5,font-size:80%,counter:pu,maxrows:5,text:Top Process Mem,display:%1 (pid:%2) %3[1.1b]B
PAGEFAULTS=interval:5,alarms:(%5 le 80 2222cc),text:Page Faults||Hit Rate,chart:line scale:100 series1:5 color1:22cccc,display:Total: %1/sec|Hard: %2\, Reads: %3\, Writes: %4|%5% %chart%
TOPPROCESSPF=interval:5,maxrows:5,font-size:80%,text:Top Processes PF,display:%1 (pid:%2) %3[1.2B] faults
COMMENT=text:,font-size:50%
CONTROL=type:1,color:%orange%,text:,display:Resource Monitor,uri:resmon

# installed software
PAGE=9
PAGE-TITLE=Software
COLOR=%Silver%
WIDE=1

COMMENT=color:%White%,style:iwb,text:Installed Software - Windows Installer
CMD=font-face:Consolas,font-size:80%,trim:1,file:cmd.exe,parameters:/c wmic product get name\,version,no-wait:1
COMMENT=color:%White%,style:iwb,text:Installed Software - 32 bit
REG2=font-face:consolas,font-size:80%,no-wait:1,wow:32,subkeys:1,values:DisplayName\,DisplayVersion,key:HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall,display:%DisplayName%[0.56s] %DisplayVersion% 
COMMENT=color:%White%,style:iwb,text:Installed Software - 64 bit
REG2=font-face:consolas,font-size:80%,no-wait:1,wow:64,subkeys:1,values:DisplayName\,DisplayVersion,key:HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall,display:%DisplayName%[0.56s] %DisplayVersion%

CONTROL=type:1,color:%orange%,display:Control Panel,uri:control
COMMENT
COMMENT=text:Anti-Malware,style:ib
WMI=namespace:root\SecurityCenter2,query:AntiVirusProduct,row-text:%DisplayName%,display:: %productState%[bit:4096:Enabled:Disabled] and %productState%[bit:393216:up to date:not up to date]

# shared resources
PAGE=10
PAGE-TITLE=Shared Resources
COLOR=%Grey%
WIDE=0

# shared resources type lookup table
set share_type_0          = Disk Drive
set share_type_1          = Print Queue
set share_type_2          = Device
set share_type_3          = IPC
set share_type_2147483645 = IPC Admin
set share_type_2147483648 = Disk Drive Admin
set share_type_2147483649 = Print Queue Admin
set share_type_2147483650 = Device Admin
set share_type_2147483651 = IPC Admin

COMMENT=color:%White%,text:Shared Resources,style:iwb
WMI=interval:60,text:Shared Resources, namespace:root\cimv2, query:Win32_Share,row-text:%Name%|  (%share_type_%Type%%),display:%Caption%|%path%|Status: %Status%

# netstats
PAGE=11
PAGE-TITLE=Network Statistics
COLOR=%Grey%
FONT-FACE=Consolas
FONT-SIZE=8
WIDE=1

# connection states
set netstate<null> = 
set netstate1 = closed
set netstate2 = listen
set netstate3 = syn_sent
set netstate4 = syn_rcvd
set netstate5 = estab
set netstate6 = fin_wait1
set netstate7 = fin_wait2
set netstate8 = close_wait
set netstate9 = closing
set netstate10 = last_ack
set netstate11 = time_wait
set netstate12 = delete_tcb

# TCP/UDP connections (traffic for tcp connections)
COMMENT=color:%White%,style:iwb,text:Net Stats - Active Connections,align:2
COMMENT=style:bi,text:image                pid  ipv     prot local address        remote address       state    sent bytes   send b/sec    rcvd bytes    rcv b/sec
NETSTATS=interval:1,filter-state:3 4 5 6 7 8 9,stats:1,\
  display:%module%[0.18s] %pid%[5.0f]  ipv%ipv%[0.4s] %prot%  %laddrf%[0.20s] %raddrf%[0.20s] %netstate%state%%[0.8s] %databytesout%[9.0k]k    %databytesoutpersec%[9.0f]    %databytesin%[9.0k]k    %databytesinpersec%[9.0f]
		  
# TCP/UDP all listening connections		 
COMMENT=color:%White%,style:iwb,text:Net Stats - Listening,align:2
COMMENT=style:ib,text:image                pid  ipv   prot local addr           state
NETSTATS=interval:1,filter-state:2,display:%module%[0.18s] %pid%[5.0f]  ipv%ipv%  %prot%  %laddrf%[0.20s] %netstate%state%%


# tools
PAGE=12
PAGE-TITLE=Tools
COLOR=%Silver%
FONT-FACE=Arial
FONT-SIZE=10
WIDE=0

COMMENT=color:%White%,style:iwb,text:Web Pages,align:2
CONTROL=type:1,color:%orange%,display:Glenn's Page,uri:https://www.glenn.delahoy.com/desktopinfo
CONTROL=type:1,color:%orange%,display:Google,uri:www.google.com
CONTROL=type:1,color:%orange%,display:Cute Cat Pictures,uri:www.google.com/search?q=cat+pictures
COMMENT

# CONTROL2 will appear on the same display row as the most recent CONTROL item
COMMENT=text:System Tools,style:iwb,color:%white%,align:2
CONTROL=wide:1,width:115,height:30,display:Device  Manager,uri:devmgmt.msc
CONTROL2=left:125,width:115,height:30,display:Documents,uri:%userprofile%
CONTROL2=left:250,width:115,height:30,display:Control Panel,uri:control

CONTROL=wide:1,width:115,height:30,display:Task Manager,uri:taskmgr
CONTROL2=left:125,width:115,height:30,display:Resource Monitor,uri:resmon
CONTROL2=left:250,width:115,height:30,display:System Info,uri:msinfo32.exe

CONTROL=wide:1,width:115,height:30,display:Reliability Monitor,uri:%SystemRoot%\System32\perfmon.exe,args:/rel
CONTROL2=left:125,width:115,height:30,display:Print Management,uri:printmanagement.msc
CONTROL2=left:250,height:30,width:115,display:Command,uri:cmd.exe

# chart demonstration
PAGE=13
PAGE-TITLE=Chart Demonstration
COLOR=%Grey%

begin-onload
set xx=0.1
end-onload

set xx={{%xx%+0.1}}
set sinx={{sin(%xx%)*100}}
set r={{Rnd(100)}}
COMMENT=color:%White%,text:Chart Demonstration,style:iwb
TEXT=interval:2,text:Horizontal Bar,          chart:bar        height:2 series1:{{rnd(100)}} threshold:75 series2:{{rnd(100)}} threshold:60
TEXT=interval:1,text:Chart - Line,            chart:line       height:3 border:0 points:90 series1:{{%r%}} color1:00ff00 series3:{{Neg(%r%)}} color3:#f000f0
TEXT=interval:3,text:Chart - Filled,          chart:filled     height:3 border:0 points:40 series1:{{rnd(100)}} color1:00ff00 series2:{{rnd(50)}} color2:bb00bb series3:{{Neg(rnd(40))}} color3:#0000f0 width:140,align:2,text-align:0
TEXT=interval:4,text:Chart - VBar,            chart:vbar       height:3 border:0 points:10 series1:{{rnd(100)}} color1:00ff00 series2:{{rnd(100)}} color2:bb00bb series3:{{rnd(50)}} color3:#0000f0
TEXT=interval:8,text:VBarFilled (1 point),    chart:vbarfilled height:3 border:0 width:150 points:1 series1:{{rnd(60)}} color1:00ff00 series2:{{rnd(60)+20}} color2:bb00bb series3:{{rnd(60)+20}} color3:#0000f0,display:            %chart%
TEXT=interval:1,text:Scatter (sine plot),     chart:scatter    height:3 border:0 series1:{{%sinx%}} color1:00fff0
TEXT=interval:4,wide:1,text:Chart - 3D,       chart:3d         height:3 border:0 points:10 series1:{{rnd(100)-50}} color1:00f090 series2:{{rnd(100)-50}} color2:bb00bb series3:{{Neg(rnd(40))}} color3:#0000f0


#
# sample scripts
# following sections are some sample scripts used by CMD items
# see the SET-SECTION and CMD items in the reference manual for details
# these used to be text files in a sub-directory called 'sample-scripts'
#

# RDP Users
# show the number of connected Remote Desktop users
# SET-SECTION=key:rdp-users,value:rdp-users.ps1
# CMD=interval:60,text:RDP Users,trim:1,file:powershell.exe,parameters:%rdp-users%,code-page:437
#

[rdp-users.ps1]
$output = $(quser) -Replace '>',''
$output = $output -Replace '\s{2,}','`t'
$($output.trim() | convertfrom-csv -delimiter '`' | ft -Property USERNAME -HideTableHeaders| Out-String).Trim()

#
# Windows Updates
# SET-SECTION=key:windows-updates,value:windows-updates.ps1
# CMD=interval:3600,text:Pending Updates,trim:1,file:powershell.exe,parameters:%windows-updates%,code-page:437
#

[windows-updates.ps1]
try {
  $msUpdateSession = New-Object -ComObject Microsoft.Update.Session
  $UpdateSearcher = $msUpdateSession.CreateUpdateSearcher()
  $SearchResult = $UpdateSearcher.Search('IsHidden=0 and IsInstalled=0')
  $totalUpdates = $($SearchResult.Updates.count)

  Write-Host "$totalUpdates"
}
catch {
  Write-Host '<error>'
  }

#
# Pending Windows Reboot
# SET-SECTION=key:pending-reboot,value:pending-reboot.ps1
# CMD=interval:3600,text:Reboot Pending,trim:1,file:powershell.exe,parameters:%pending-reboot%,code-page:437
#

[pending-reboot.ps1]
 function Test-PendingReboot
{
    [CmdletBinding()]
    param
    (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true)]
        [Alias('CN', 'Computer')]
        [String[]]
        $ComputerName = $env:COMPUTERNAME,

        [Parameter()]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.CredentialAttribute()]
        $Credential,

        [Parameter()]
        [Switch]
        $Detailed,

        [Parameter()]
        [Switch]
        $SkipConfigurationManagerClientCheck,

        [Parameter()]
        [Switch]
        $SkipPendingFileRenameOperationsCheck
    )

    process
    {
        foreach ($computer in $ComputerName)
        {
            try
            {
                $invokeWmiMethodParameters = @{
                    Namespace    = 'root/default'
                    Class        = 'StdRegProv'
                    Name         = 'EnumKey'
                    ComputerName = $computer
                    ErrorAction  = 'Stop'
                }

                $hklm = [UInt32] "0x80000002"

                if ($PSBoundParameters.ContainsKey('Credential'))
                {
                    $invokeWmiMethodParameters.Credential = $Credential
                }

                ## Query the Component Based Servicing Reg Key
                $invokeWmiMethodParameters.ArgumentList = @($hklm, 'SOFTWARE\Microsoft\Windows\CurrentVersion\Component Based Servicing\')
                $registryComponentBasedServicing = (Invoke-WmiMethod @invokeWmiMethodParameters).sNames -contains 'RebootPending'

                ## Query WUAU from the registry
                $invokeWmiMethodParameters.ArgumentList = @($hklm, 'SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsUpdate\Auto Update\')
                $registryWindowsUpdateAutoUpdate = (Invoke-WmiMethod @invokeWmiMethodParameters).sNames -contains 'RebootRequired'

                ## Query JoinDomain key from the registry - These keys are present if pending a reboot from a domain join operation
                $invokeWmiMethodParameters.ArgumentList = @($hklm, 'SYSTEM\CurrentControlSet\Services\Netlogon')
                $registryNetlogon = (Invoke-WmiMethod @invokeWmiMethodParameters).sNames
                $pendingDomainJoin = ($registryNetlogon -contains 'JoinDomain') -or ($registryNetlogon -contains 'AvoidSpnSet')

                ## Query ComputerName and ActiveComputerName from the registry and setting the MethodName to GetMultiStringValue
                $invokeWmiMethodParameters.Name = 'GetMultiStringValue'
                $invokeWmiMethodParameters.ArgumentList = @($hklm, 'SYSTEM\CurrentControlSet\Control\ComputerName\ActiveComputerName\', 'ComputerName')
                $registryActiveComputerName = Invoke-WmiMethod @invokeWmiMethodParameters

                $invokeWmiMethodParameters.ArgumentList = @($hklm, 'SYSTEM\CurrentControlSet\Control\ComputerName\ComputerName\', 'ComputerName')
                $registryComputerName = Invoke-WmiMethod @invokeWmiMethodParameters

                $pendingComputerRename = $registryActiveComputerName -ne $registryComputerName -or $pendingDomainJoin

                ## Query PendingFileRenameOperations from the registry
                if (-not $PSBoundParameters.ContainsKey('SkipPendingFileRenameOperationsCheck'))
                {
                    $invokeWmiMethodParameters.ArgumentList = @($hklm, 'SYSTEM\CurrentControlSet\Control\Session Manager\', 'PendingFileRenameOperations')
                    $registryPendingFileRenameOperations = (Invoke-WmiMethod @invokeWmiMethodParameters).sValue
                    $registryPendingFileRenameOperationsBool = [bool]$registryPendingFileRenameOperations
                }

                ## Query ClientSDK for pending reboot status, unless SkipConfigurationManagerClientCheck is present
                if (-not $PSBoundParameters.ContainsKey('SkipConfigurationManagerClientCheck'))
                {
                    $invokeWmiMethodParameters.NameSpace = 'ROOT\ccm\ClientSDK'
                    $invokeWmiMethodParameters.Class = 'CCM_ClientUtilities'
                    $invokeWmiMethodParameters.Name = 'DetermineifRebootPending'
                    $invokeWmiMethodParameters.Remove('ArgumentList')

                    try
                    {
                        $sccmClientSDK = Invoke-WmiMethod @invokeWmiMethodParameters
                        $systemCenterConfigManager = $sccmClientSDK.ReturnValue -eq 0 -and ($sccmClientSDK.IsHardRebootPending -or $sccmClientSDK.RebootPending)
                    }
                    catch
                    {
                        $systemCenterConfigManager = $null
                        Write-Verbose -Message ($script:localizedData.invokeWmiClientSDKError -f $computer)
                    }
                }

                $isRebootPending = $registryComponentBasedServicing -or `
                    $pendingComputerRename -or `
                    $pendingDomainJoin -or `
                    $registryPendingFileRenameOperationsBool -or `
                    $systemCenterConfigManager -or `
                    $registryWindowsUpdateAutoUpdate

                if ($PSBoundParameters.ContainsKey('Detailed'))
                {
                    [PSCustomObject]@{
                        ComputerName                     = $computer
                        ComponentBasedServicing          = $registryComponentBasedServicing
                        PendingComputerRenameDomainJoin  = $pendingComputerRename
                        PendingFileRenameOperations      = $registryPendingFileRenameOperationsBool
                        PendingFileRenameOperationsValue = $registryPendingFileRenameOperations
                        SystemCenterConfigManager        = $systemCenterConfigManager
                        WindowsUpdateAutoUpdate          = $registryWindowsUpdateAutoUpdate
                        IsRebootPending                  = $isRebootPending
                    }
                }
                else
                {
                    [PSCustomObject]@{
                        ComputerName    = $computer
                        IsRebootPending = $isRebootPending
                    }
                }
            }

            catch
            {
                Write-Verbose '$Computer`: $_'
            }
        }
    }
}

# Test-PendingReboot
if ((Test-PendingReboot).IsRebootPending) {
Write-Host "Reboot Pending"
} else {
Write-Host "ok"
}



[bitlocker-status.ps1]
## Get BitLocker drive status for DesktopInfo
## Does NOT require Admin rights
##
## To work properly, PowerShell Execution Policy must be set to RemoteSigned.
##
## Get arguments for Local or Removable
## Valid parameters are 'Local Fixed' or 'Removable'
$query = '%bitlocker-query%'
If ( -not $query ) { Exit 1 }

## set status values
$blStatusDesc = @(
				[pscustomobject]@{desc='Status Unknown'}
				[pscustomobject]@{desc='Fully Encrypted'}
				[pscustomobject]@{desc='Unencrypted'}
				[pscustomobject]@{desc='Encryption in Progress'}
				[pscustomobject]@{desc='Decryption in Progress'}
				[pscustomobject]@{desc='Encryption Suspended'}
				[pscustomobject]@{desc='Decryption Suspended'}
				)

## Output headers
Write-Host ('Name ')('Size').PadLeft(16)('Free Space').PadLeft(16)BitLocker

## get local volumes using WMI
ForEach ( $logicalVol in (Get-CimInstance -Class Win32_LogicalDisk | Where-Object Description -like "$query*") ) {
	$blStatus=(New-Object -ComObject Shell.Application).NameSpace($($logicalVol.Name)).Self.ExtendedProperty('System.Volume.BitLockerProtection')
	Write-Host $logicalVol.Name.ToString().PadRight(5),($logicalVol.Size /1000000000).ToString('N0').PadLeft(13)MB,($logicalVol.FreeSpace/1000000000).ToString('N0').PadLeft(13)MB, $blStatusDesc[$blStatus].desc
}

